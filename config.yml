pipeline: protein_monomer
stages:
- align
- couplings
- compare
- mutate
global:
  cpu: null
  prefix: prefix
  region: null
  sequence_id: null
  theta: 0.8
align:
  protocol: existing
  input_alignment:
  first_index: 1
  seqid_filter: null
  minimum_sequence_coverage: 50
  minimum_column_coverage: 70
  sequence_threshold: 0.2
  extract_annotation: True
  compute_num_effective_seqs: False
couplings:
  alphabet: null
  ignore_gaps: true
  iterations: 100
  lambda_J: 0.01
  lambda_J_times_Lq: true
  lambda_group: null
  lambda_h: 0.01
  min_sequence_distance: 6
  protocol: standard
  reuse_ecs: true
  scale_clusters: null
mutate:
  mutation_dataset_file: null
  protocol: standard
databases:
  pdb_mmtf_dir: null
  sequence_download_url: http://www.uniprot.org/uniprot/{}.fasta
  sifts_mapping_table: /n/groups/marks/databases/SIFTS/pdb_chain_uniprot_plus_current.o2.csv
  sifts_sequence_db: /n/groups/marks/databases/SIFTS/pdb_chain_uniprot_plus_current.o2.fasta
  uniprot: /n/groups/marks/databases/jackhmmer/uniprot/uniprot_current.o2.fasta
  uniref100: /n/groups/marks/databases/jackhmmer/uniref100/uniref100_current.o2.fasta
  uniref90: /n/groups/marks/databases/jackhmmer/uniref90/uniref90_current.o2.fasta
environment:
  configuration: null
  cores: 2
  engine: slurm
  memory: 15000
  queue: short
  time: 0-3:00:0
management:
  archive:
  - alignment_file
  - contact_map_files
  - ec_compared_all_file
  - ec_compared_longrange_file
  - ec_file
  - ec_lines_compared_pml_file
  - ec_lines_pml_file
  - ec_longrange_file
  - enrichment_file
  - enrichment_pml_files
  - evzoom_file
  - folded_structure_files
  - folding_comparison_file
  - folding_ec_file
  - folding_individual_comparison_files
  - folding_ranking_file
  - frequencies_file
  - mutation_matrix_file
  - mutation_matrix_plot_files
  - mutations_epistatic_pml_files
  - pdb_structure_hits_file
  - remapped_pdb_files
  - sec_struct_file
  - secondary_structure_pml_file
  - statistics_file
  - target_sequence_file
tools:
  cns: /n/groups/marks/pipelines/evcouplings/software/cns_solve_1.21/intel-x86_64bit-linux/bin/cns
  hhfilter: /n/groups/marks/pipelines/evcouplings/software/hh-suite/bin/hhfilter
  hmmbuild: /n/groups/marks/pipelines/evcouplings/software/hmmer-3.1b2-linux-intel-x86_64/binaries/hmmbuild
  hmmsearch: /n/groups/marks/pipelines/evcouplings/software/hmmer-3.1b2-linux-intel-x86_64/binaries/hmmsearch
  jackhmmer: /n/groups/marks/pipelines/evcouplings/software/hmmer-3.1b2-linux-intel-x86_64/binaries/jackhmmer
  maxcluster: /n/groups/marks/pipelines/evcouplings/software/maxcluster64bit
  plmc: /n/groups/marks/pipelines/evcouplings/software/plmc/bin/plmc
  psipred: /n/groups/marks/software/runpsipred_o2
# Compare ECs to known 3D structures
compare:
  # Current options: standard
  protocol: standard

  # Following parameters will be usually overriden by global settings / output of previous stage
  prefix:
  sequence_id:
  ec_file:
  target_sequence_file:

  # If True, find structures by sequence alignment against the PDB, otherwise identify structures using
  # sequence_id and SIFTS database (sequence_id must be UniProt AC/ID in this case)
  by_alignment: True

  # Leave this parameter empty to use all PDB structures for given sequence_id, otherwise
  # will be limited to the given IDs (single value or list). Important: note that this acts only as a filter on the
  # structures found by alignment or in the SIFTS table (!)
  pdb_ids:

  # Limit number of structures and chains for comparison
  max_num_structures: 10
  max_num_hits: 25

  # compare to multimer contacts (if multiple chains of the same sequence or its homologs are present in a structure)
  compare_multimer: True

  # settings for sequence alignment against PDB sequences using jackhmmer
  # (additional settings like iterations possible, compare to align stage)
  sequence_file:
  first_index:
  region:
  alignment_min_overlap: 20
  use_bitscores: True
  domain_threshold: 0.1
  sequence_threshold: 0.1

  # Comparison and plotting settings

  # Filter that defines which atoms will be used for distance calculations. If empty/None, no filter will be
  # applied (resulting in the computation of minimum atom distances between all pairs of atoms). If setting to any
  # particular PDB atom type, only these atoms will be used for the computation (e.g. CA will give C_alpha distances,
  # CB will give C_beta distances, etc.)
  atom_filter:

  # Distance cutoff (Angstrom) for a true positive pair
  distance_cutoff: 5

  # Only long-range pairs with abs(i-j)>= min_sequence_distance will be used for CouplingScoresCompared_longrange.csv file
  min_sequence_distance: 6

  # Plot contact maps with ECs above these mixture model probability cutoffs
  plot_probability_cutoffs: [0.90, 0.99]

  # Plot fixed numbers of ECS. Integers will be interpreted as absolute numbers, floats as fractions of L (model length)
  plot_lowest_count: 0.05
  plot_highest_count: 1.0
  plot_increase: 0.05

  # Axis boundaries of contact map plot depending on range of ECs and structure.
  # Options: union, intersection, ecs, structure, [start, end] (e.g. [100, 200])
  boundaries: union

  # scale sizes of EC dots in scatter plot based on strength of EC score
  scale_sizes: True

  # draw secondary structure on contact map plots
  draw_secondary_structure: True

  # Alignment method to use to search the PDB Seqres database. Options: jackhmmer, hmmsearch
  # Set to jackhmmer to search the PDB Seqres database using jackhmmer from the target sequence only (more stringent).
  # Set to hmmsearch to search the PDB seqres database using an HMM built from the output monomer alignment (less stringent).
  # Warning: searching by HMM may result in crystal structures from very distant homologs or even unrelated sequences.
  pdb_alignment_method: jackhmmer
fold:
  # Options: standard
  protocol: standard

  # Options: cns_dgsa
  engine: cns_dgsa

  # Config file. If blank, default configuration (restraints.yml) in package will be used
  folding_config_file:

  # If True, limit 3D modeling only to that region of sequence that actually has sequence alignment coverage)
  cut_to_alignment_region: True

  # Method for secondary structure prediction (options: psipred, requires PSIPRED installation). Will be used
  # to generate distance and dihedral angle restraints for local geometry.
  sec_struct_method: psipred

  # If secondary structure was already predicted in previous execution of configuration, reuse the file
  reuse_sec_struct: True

  # Instead of predicting secondary structure in pipeline, can specify a secondary structure file:
  # Must be csv file with columns i (position), A_i (residue) and sec_struct_3state (secondary structure, H, E or C
  # for helix, sheet or coil)
  sec_struct_file:

  # Do not use EC pairs as distance restraints that are geometrically incompatible with predicted secondary structure
  filter_sec_struct_clashes: True

  # Only use ECs with sequence distance abs(i-j) >= min_sequence_distance for folding
  min_sequence_distance: 6

  # Predict structures using all ECs above these probability cutoffs according to mixture model
  fold_probability_cutoffs: [0.90, 0.99]

  # Predict structures with selected number of ECs.
  # Integers will be interpreted as absolute number of ECs, floats as a fraction of L (model length)
  fold_lowest_count: 0.5
  fold_highest_count: 1.3
  fold_increase: 0.05

  # number of trial structure to generate for each EC set
  num_models: 10

  # remove intermediate files created during folding and keep only final models
  cleanup: True

  # Inputs defined by "global" or previous stages
  # prefix:
  # ec_file:
  # target_sequence_file:
  # segments:
  # remapped_pdb_files:
  # cpu: